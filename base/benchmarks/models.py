from django.db import models


class Benchmark(models.Model):
    """
    A model representing a benchmark for a text generation system.

    Attributes:
    request_id (CharField): A unique identifier for the benchmark.
    prompt_text (TextField): The text provided as input to the system.
    generated_text (TextField): The text generated by the system.
    token_count (IntegerField): The total number of tokens in the generated text.
    time_to_first_token (IntegerField): The time taken to generate the first token.
    time_per_output_token (IntegerField): The average time taken to generate each token.
    total_generation_time (IntegerField): The total time taken to generate the entire text.
    timestamp (DateTimeField): The date and time when the benchmark was created.
    """

    request_id = models.CharField(max_length=255, primary_key=True)
    prompt_text = models.TextField()
    generated_text = models.TextField()
    token_count = models.IntegerField()
    time_to_first_token = models.IntegerField()
    time_per_output_token = models.IntegerField()
    total_generation_time = models.IntegerField()
    timestamp = models.DateTimeField()

    def __str__(self) -> str:
        """
        Returns a string representation of the Benchmark object.

        Returns:
        str: A string in the format 'Benchmark id <request_id>'
        """
        return f'Benchmark id {self.request_id}'
    